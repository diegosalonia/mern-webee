{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\diego\\\\Desktop\\\\mern-webee\\\\frontend\\\\src\\\\components\\\\map\\\\SensorsMap.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useEffect, useState } from \"react\";\nimport Link from \"react-dom\";\nimport mapboxgl from \"mapbox-gl\";\nimport \"./SensorMap.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nmapboxgl.accessToken = \"pk.eyJ1IjoiZGllZ29zYWxvbmlhIiwiYSI6ImNrcTZzY2dyejFnZGcydm12eW5oemhvMzEifQ.1jFMrHrPaucTX_LENmmWLQ\";\n\nconst SensorsMap = () => {\n  _s();\n\n  const mapContainer = useRef(null);\n  const map = useRef(null);\n  const [lng, setLng] = useState(-64.190405);\n  const [lat, setLat] = useState(-31.407334);\n  const [zoom, setZoom] = useState(9);\n  map.on(\"load\", () => {\n    map.addSource(\"point\", {\n      type: \"geojson\",\n      data: {\n        type: \"FeatureCollection\",\n        features: [{\n          type: \"Feature\",\n          geometry: {\n            type: \"Point\",\n            coordinates: [lng, lat]\n          }\n        }]\n      }\n    });\n    map.addLayer({\n      id: \"points\",\n      type: \"symbol\",\n      source: \"point\",\n      // reference the data source\n      layout: {\n        \"icon-image\": \"cat\",\n        // reference the image\n        \"icon-size\": 0.25\n      }\n    });\n  });\n  useEffect(() => {\n    if (map.current) return; // initialize map only once\n\n    map.current = new mapboxgl.Map({\n      container: mapContainer.current,\n      style: \"mapbox://styles/mapbox/streets-v11\",\n      center: [lng, lat],\n      zoom: zoom\n    });\n  });\n  useEffect(() => {\n    if (!map.current) return; // wait for map to initialize\n\n    map.current.on(\"move\", () => {\n      setLng(map.current.getCenter().lng.toFixed(4));\n      setLat(map.current.getCenter().lat.toFixed(4));\n      setZoom(map.current.getZoom().toFixed(2));\n    });\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar\",\n      children: [\"Longitude: \", lng, \" | Latitude: \", lat, \" | Zoom: \", zoom]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: mapContainer,\n      className: \"mapsensor\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SensorsMap, \"uY45lAhZWW7J4Kl+RRH1j13uo/A=\");\n\n_c = SensorsMap;\nexport default SensorsMap;\n\nvar _c;\n\n$RefreshReg$(_c, \"SensorsMap\");","map":{"version":3,"sources":["C:/Users/diego/Desktop/mern-webee/frontend/src/components/map/SensorsMap.js"],"names":["React","useRef","useEffect","useState","Link","mapboxgl","accessToken","SensorsMap","mapContainer","map","lng","setLng","lat","setLat","zoom","setZoom","on","addSource","type","data","features","geometry","coordinates","addLayer","id","source","layout","current","Map","container","style","center","getCenter","toFixed","getZoom"],"mappings":"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","sourcesContent":["import React, { useRef, useEffect, useState } from \"react\";\r\nimport Link from \"react-dom\";\r\nimport mapboxgl from \"mapbox-gl\";\r\nimport \"./SensorMap.css\";\r\n\r\nmapboxgl.accessToken =\r\n  \"pk.eyJ1IjoiZGllZ29zYWxvbmlhIiwiYSI6ImNrcTZzY2dyejFnZGcydm12eW5oemhvMzEifQ.1jFMrHrPaucTX_LENmmWLQ\";\r\n\r\nconst SensorsMap = () => {\r\n  const mapContainer = useRef(null);\r\n  const map = useRef(null);\r\n  const [lng, setLng] = useState(-64.190405);\r\n  const [lat, setLat] = useState(-31.407334);\r\n  const [zoom, setZoom] = useState(9);\r\n\r\n  map.on(\"load\", () => {\r\n        map.addSource(\"point\", {\r\n          type: \"geojson\",\r\n          data: {\r\n            type: \"FeatureCollection\",\r\n            features: [\r\n              {\r\n                type: \"Feature\",\r\n                geometry: {\r\n                  type: \"Point\",\r\n                  coordinates: [lng, lat],\r\n                },\r\n              },\r\n            ],\r\n          },\r\n        });\r\n        map.addLayer({\r\n          id: \"points\",\r\n          type: \"symbol\",\r\n          source: \"point\", // reference the data source\r\n          layout: {\r\n            \"icon-image\": \"cat\", // reference the image\r\n            \"icon-size\": 0.25,\r\n          },\r\n        });\r\n      }\r\n    );\r\n\r\n  useEffect(() => {\r\n    if (map.current) return; // initialize map only once\r\n    map.current = new mapboxgl.Map({\r\n      container: mapContainer.current,\r\n      style: \"mapbox://styles/mapbox/streets-v11\",\r\n      center: [lng, lat],\r\n      zoom: zoom,\r\n    });\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (!map.current) return; // wait for map to initialize\r\n    map.current.on(\"move\", () => {\r\n      setLng(map.current.getCenter().lng.toFixed(4));\r\n      setLat(map.current.getCenter().lat.toFixed(4));\r\n      setZoom(map.current.getZoom().toFixed(2));\r\n    });\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"sidebar\">\r\n        Longitude: {lng} | Latitude: {lat} | Zoom: {zoom}\r\n      </div>\r\n      <div ref={mapContainer} className=\"mapsensor\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SensorsMap;\r\n"]},"metadata":{},"sourceType":"module"}